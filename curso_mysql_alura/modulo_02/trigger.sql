USE vendas_sucos;


CREATE TABLE tb_faturamento (
	data_venda		DATE,
	total_venda		FLOAT
);

CREATE TABLE notas (
	NUMERO 			VARCHAR(5) NOT NULL,
	DATA_VENDA		DATE,
	CPF				VARCHAR(20),
	MATRICULA		VARCHAR(5),
	IMPOSTO			FLOAT,
	PRIMARY KEY (NUMERO)
);

SELECT * FROM notas;
DESCRIBE notas;

CREATE TABLE itens_notas(
	NUMERO		VARCHAR(5),
	CODIGO		VARCHAR(10),
	QUANTIDADE	INT,
	PRECO		FLOAT,
	PRIMARY KEY (NUMERO, CODIGO),
	FOREIGN KEY (CODIGO) REFERENCES produtos (CODIGO)
);


DESCRIBE itens_notas;
SELECT * FROM clientes;

SELECT * FROM vendedores;
DESCRIBE vendedores;

SELECT * FROM produtos;
DESCRIBE produtos;


INSERT INTO notas(NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
	VALUES('0106', '2019-05-08', '1471156710', '235', 0.10);

INSERT INTO itens_notas(NUMERO, CODIGO, QUANTIDADE, PRECO)
	VALUES('0106', '1000889', 100, 10);

INSERT INTO itens_notas(NUMERO, CODIGO, QUANTIDADE, PRECO)
	VALUES('0106', '1002334', 100, 10);

SELECT * FROM notas;
SELECT * FROM itens_notas;

DELETE FROM tb_faturamento;
INSERT INTO tb_faturamento 
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA
	FROM notas A INNER JOIN itens_notas B ON A.NUMERO = B.NUMERO
	GROUP BY A.DATA_VENDA;

SELECT * FROM tb_faturamento;

DELETE FROM itens_notas; 
DELETE FROM notas;

DELIMITER //
CREATE TRIGGER TG_CALCULA_FATURAMENTO_INSERT AFTER INSERT ON itens_notas
FOR EACH ROW BEGIN
	DELETE FROM tb_faturamento;
	INSERT INTO tb_faturamento 
	SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA
		FROM notas A INNER JOIN itens_notas B ON A.NUMERO = B.NUMERO
		GROUP BY A.DATA_VENDA;
END//
DELIMITER ;